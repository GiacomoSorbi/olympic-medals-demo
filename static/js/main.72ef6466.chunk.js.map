{"version":3,"sources":["icons/arrow.svg","icons/add.svg","icons/edit.svg","icons/USA.svg","icons/China.svg","icons/Germany.svg","icons/France.svg","icons/UK.svg","icons/Spain.svg","icons/Latvia.svg","icons/Italy.svg","icons/Croatia.svg","icons/Brazil.svg","icons/Japan.svg","icons/Belgium.svg","icons/Lithuania.svg","icons/Portugal.svg","icons/Greece.svg","icons/Russia.svg","icons/SouthKorea.svg","icons/Hungary.svg","icons/Poland.svg","icons/Peru.svg","icons/Philippines.svg","icons/Panama.svg","icons/Netherlands.svg","icons/Argentina.svg","icons/Ukraine.svg","icons/UAE.svg","icons/Vatican.svg","icons/Vietnam.svg","icons/Venezuela.svg","icons/Uzbekistan.svg","icons/Uruguay.svg","icons/olympic-logo.svg","actions/constants.js","actions/index.js","actions/actionDispatchers.js","components/add-button/index.js","fixtures/data.js","components/medals-table-row/index.jsx","components/sort-buttons/index.js","components/medal/index.jsx","utilities/index.js","components/medals-table/index.jsx","components/medals-modal/index.jsx","selectors/index.js","selectors/interfaceSelectors.js","selectors/medalsDataSelectors.js","App.js","reducers/interfaceReducer.js","reducers/medalsDataReducer.js","reducers/reducers.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CHANGE_SORTING","DELETE_ROW","EDIT_ROW","TOGGLE_MODAL","UPDATE_TABLE","LOAD_TABLE","createAction","actionType","payload","type","actionCreatorsFactory","actions","Object","keys","reduce","acc","action","actionName","toLowerCase","replace","_","g1","g2","concat","toUpperCase","constants","deleteRow","dispatch","country","arguments","length","undefined","actionCreators","toggleModal","editRow","changeSorting","AddButton","props","react_default","a","createElement","Button","onClick","color","className","src","add","alt","flags","USA","China","Germany","France","UK","Spain","Latvia","Italy","Croatia","Brazil","Japan","Belgium","Lithuania","Portugal","Greece","Russia","SouthKorea","Hungary","Poland","Peru","Philippines","Panama","Netherlands","Argentina","Ukraine","UAE","Vatican","Vietnam","Venezuela","Uzbekistan","Uruguay","MedalsTableRow","countryData","name","scope","height","gold","silver","bronze","total","data-country","onEdit","edit","SortButtons","data-sort-direction","sortCriteria","arrow","colors","Medal","xmlns","version","id","x","y","viewBox","style","enableBackground","points","d","fill","removeRow","medalsData","countryName","filter","sortTable","key","order","sort","b","medalTypes","medalTypesTotal","getFormPayload","event","currentCountry","currentTarget","querySelector","value","forEach","medal","MedalsTable","logo","Table","map","components_medal","slice","components_sort_buttons","data","index","medals_table_row","MedalsModal","find","isOpen","Modal","Boolean","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","for","Input","min","currentlyUsed","availableCountries","Set","delete","Array","from","getAvailableCountries","defaultValue","selectors","interfaceSelectors","getOpenModal","pathOr","getSortCriteria","medalsDataSelectors","getMedalsData","App","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dataset","sortDirection","openModal","preventDefault","toggleModalEdit","toggleModalNew","inherits","createClass","components_add_button","medals_modal","components_medals_table","toConsumableArray","split","Component","connect","state","initialState","interfaceReducer","objectSpread","medalsDataReducer","baseReducer","rootReducer","combineReducers","interface","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","window","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72ef6466.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.e16722b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.29af7951.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.311587c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/USA.0652a060.svg\";","module.exports = __webpack_public_path__ + \"static/media/China.71e36ba7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Germany.557a3a5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/France.dffc0454.svg\";","module.exports = __webpack_public_path__ + \"static/media/UK.9ade6244.svg\";","module.exports = __webpack_public_path__ + \"static/media/Spain.64085897.svg\";","module.exports = __webpack_public_path__ + \"static/media/Latvia.eb34f31d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Italy.5c4e5bd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Croatia.98806748.svg\";","module.exports = __webpack_public_path__ + \"static/media/Brazil.b944bb82.svg\";","module.exports = __webpack_public_path__ + \"static/media/Japan.f5f86b85.svg\";","module.exports = __webpack_public_path__ + \"static/media/Belgium.9ba81811.svg\";","module.exports = __webpack_public_path__ + \"static/media/Lithuania.659f0642.svg\";","module.exports = __webpack_public_path__ + \"static/media/Portugal.36172408.svg\";","module.exports = __webpack_public_path__ + \"static/media/Greece.7f1d11c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Russia.2e27fbea.svg\";","module.exports = __webpack_public_path__ + \"static/media/SouthKorea.379c9250.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hungary.a92207ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/Poland.be3cca78.svg\";","module.exports = __webpack_public_path__ + \"static/media/Peru.c39b137b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Philippines.448f4fbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Panama.78862cdf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Netherlands.6ca0bffb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Argentina.616682b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ukraine.598860c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/UAE.9b441252.svg\";","module.exports = __webpack_public_path__ + \"static/media/Vatican.6742e02b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Vietnam.57a45a32.svg\";","module.exports = __webpack_public_path__ + \"static/media/Venezuela.af5b8c3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Uzbekistan.9b0f0c3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Uruguay.b07059a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/olympic-logo.3ec38565.svg\";","// Important: keep the same format for action creator to work fine\n\n/*\n  asynch actions\n*/\nexport const CHANGE_SORTING = 'CHANGE_SORTING'\nexport const DELETE_ROW = 'DELETE_ROW'\nexport const EDIT_ROW = 'EDIT_ROW'\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL'\n/*\n  synch actions\n*/\nexport const UPDATE_TABLE = 'UPDATE_TABLE'\nexport const LOAD_TABLE = 'LOAD_TABLE'\n","import * as constants from './constants'\n\nexport const createAction = actionType => payload => ({\n  type: actionType,\n  payload,\n})\n\nexport const actionCreatorsFactory = actions =>\n  Object.keys(actions).reduce((acc, action) => {\n    const actionName = action\n      .toLowerCase()\n      .replace(/_([a-z])([a-z]+)/g, (_, g1, g2) => `${g1.toUpperCase()}${g2}`)\n    acc[actionName] = createAction(actions[action])\n    acc[actionName + 'Success'] = createAction(actions[action] + '_SUCCESS')\n    acc[actionName + 'Failure'] = createAction(actions[action] + '_FAILURE')\n    return acc\n  }, {})\n\nexport default actionCreatorsFactory(constants)\n","import actionCreators from '.'\n\nexport const deleteRow = dispatch => (country = null) => {\n  dispatch(actionCreators.deleteRow(country))\n  dispatch(actionCreators.toggleModal(null))\n}\n\nexport const editRow = dispatch => (payload = {}) => {\n  dispatch(actionCreators.editRow(payload))\n  dispatch(actionCreators.toggleModal(null))\n}\n\nexport const changeSorting = dispatch => (payload = {}) => {\n  dispatch(actionCreators.changeSorting(payload))\n}\n\nexport const toggleModal = dispatch => (payload = {}) => {\n  dispatch(actionCreators.toggleModal(payload))\n}\n\n// export const editRow = dispatch => async (filters = {}) => {\n//   // dispatching action triggering a loader on\n//   dispatch(actionCreators.getAuctions())\n//   try {\n//     // starting the request\n//     const res = await Api.getAuctions(filters)\n//     // success clause, reduces the loader counter and update the store with the payload\n//     dispatch(actionCreators.getAuctionsSuccess(res))\n//   } catch (err) {\n//     // failure clause, reduces the loader counter and displays an error message\n//     dispatch(actionCreators.getAuctionsFailure(err))\n//   }\n// }\n\n// export const submitNewAuction = dispatch => async (newAuction = {}) => {\n//   dispatch(actionCreators.submitNewAuction())\n//   try {\n//     const res = await Api.submitNewAuction(newAuction)\n//     dispatch(actionCreators.submitNewAuctionSuccess(res.id))\n//   } catch (err) {\n//     dispatch(actionCreators.submitNewAuctionFailure(err))\n//   }\n// }\n\n// export const getConfig = dispatch => async () => {\n//   dispatch(actionCreators.getConfig())\n//   try {\n//     const res = await Api.getConfig()\n//     dispatch(actionCreators.getConfigSuccess(res))\n//   } catch (err) {\n//     dispatch(actionCreators.getConfigFailure(err))\n//   }\n// }\n","import React from 'react'\nimport { Button } from 'reactstrap'\nimport add from '../../icons/add.svg'\nimport './add-button.css'\n\nconst AddButton = props => (\n  <Button\n    onClick={props.onClick}\n    color='primary'\n    className='add-button d-flex align-items-center'\n  >\n    <img className='add-icon' src={add} alt='edit row' />\n    <div className='add-text'>Add new Entry</div>\n  </Button>\n)\n\nexport default AddButton\n","import USA from '../icons/USA.svg'\nimport China from '../icons/China.svg'\nimport Germany from '../icons/Germany.svg'\nimport France from '../icons/France.svg'\nimport UK from '../icons/UK.svg'\nimport Spain from '../icons/Spain.svg'\nimport Latvia from '../icons/Latvia.svg'\nimport Italy from '../icons/Italy.svg'\nimport Croatia from '../icons/Croatia.svg'\nimport Brazil from '../icons/Brazil.svg'\nimport Japan from '../icons/Japan.svg'\nimport Belgium from '../icons/Belgium.svg'\nimport Lithuania from '../icons/Lithuania.svg'\nimport Portugal from '../icons/Portugal.svg'\nimport Greece from '../icons/Greece.svg'\nimport Russia from '../icons/Russia.svg'\nimport SouthKorea from '../icons/SouthKorea.svg'\nimport Hungary from '../icons/Hungary.svg'\nimport Poland from '../icons/Poland.svg'\nimport Peru from '../icons/Peru.svg'\nimport Philippines from '../icons/Philippines.svg'\nimport Panama from '../icons/Panama.svg'\nimport Netherlands from '../icons/Netherlands.svg'\nimport Argentina from '../icons/Argentina.svg'\nimport Ukraine from '../icons/Ukraine.svg'\nimport UAE from '../icons/UAE.svg'\nimport Vatican from '../icons/Vatican.svg'\nimport Vietnam from '../icons/Vietnam.svg'\nimport Venezuela from '../icons/Venezuela.svg'\nimport Uzbekistan from '../icons/Uzbekistan.svg'\nimport Uruguay from '../icons/Uruguay.svg'\n\nexport const flags = {\n  USA,\n  China,\n  Germany,\n  France,\n  UK,\n  Spain,\n  Latvia,\n  Italy,\n  Croatia,\n  Brazil,\n  Japan,\n  Belgium,\n  Lithuania,\n  Portugal,\n  Greece,\n  Russia,\n  SouthKorea,\n  Hungary,\n  Poland,\n  Peru,\n  Philippines,\n  Panama,\n  Netherlands,\n  Argentina,\n  Ukraine,\n  UAE,\n  Vatican,\n  Vietnam,\n  Venezuela,\n  Uzbekistan,\n  Uruguay,\n}\n\nexport const olympicMedalsByCountry = [\n  {\n    name: 'USA',\n    gold: 1022,\n    silver: 795,\n    bronze: 705,\n    total: 2522,\n  },\n  {\n    name: 'China',\n    gold: 224,\n    silver: 167,\n    bronze: 155,\n    total: 546,\n  },\n  {\n    name: 'Russia',\n    gold: 149,\n    silver: 125,\n    bronze: 154,\n    total: 428,\n  },\n  {\n    name: 'Germany',\n    gold: 191,\n    silver: 194,\n    bronze: 230,\n    total: 615,\n  },\n  {\n    name: 'France',\n    gold: 212,\n    silver: 241,\n    bronze: 263,\n    total: 716,\n  },\n  {\n    name: 'UK',\n    gold: 263,\n    silver: 295,\n    bronze: 293,\n    total: 851,\n  },\n  {\n    name: 'Lithuania',\n    gold: 6,\n    silver: 7,\n    bronze: 13,\n    total: 26,\n  },\n  {\n    name: 'Japan',\n    gold: 142,\n    silver: 136,\n    bronze: 161,\n    total: 439,\n  },\n  {\n    name: 'Belgium',\n    gold: 40,\n    silver: 53,\n    bronze: 55,\n    total: 148,\n  },\n  {\n    name: 'Greece',\n    gold: 33,\n    silver: 43,\n    bronze: 40,\n    total: 116,\n  },\n  {\n    name: 'Poland',\n    gold: 68,\n    silver: 83,\n    bronze: 133,\n    total: 284,\n  },\n  {\n    name: 'Italy',\n    gold: 206,\n    silver: 178,\n    bronze: 193,\n    total: 577,\n  },\n  {\n    name: 'Argentina',\n    gold: 21,\n    silver: 25,\n    bronze: 28,\n    total: 74,\n  },\n  {\n    name: 'Peru',\n    gold: 1,\n    silver: 3,\n    bronze: 0,\n    total: 4,\n  },\n  {\n    name: 'Latvia',\n    gold: 3,\n    silver: 11,\n    bronze: 5,\n    total: 19,\n  },\n  {\n    name: 'Panama',\n    gold: 1,\n    silver: 0,\n    bronze: 2,\n    total: 3,\n  },\n]\n","import React from 'react'\nimport { Button } from 'reactstrap'\nimport edit from '../../icons/edit.svg'\nimport { flags } from '../../fixtures/data'\n\nconst MedalsTableRow = props => {\n  const country = props.countryData.name\n  return (\n    <tr className={props.className}>\n      <th className='text-center align-middle' scope='row'>\n        {flags[country] ? (\n          <img height='20px' src={flags[country]} alt={country} />\n        ) : null}\n        <br />\n        {country}\n      </th>\n      <td className='text-right border align-middle'>\n        {props.countryData.gold}\n      </td>\n      <td className='text-right border align-middle'>\n        {props.countryData.silver}\n      </td>\n      <td className='text-right border align-middle'>\n        {props.countryData.bronze}\n      </td>\n      <td className='text-right border  align-middle'>\n        {props.countryData.total}\n      </td>\n      <td className='align-middle border'>\n        <Button data-country={country} color='primary' onClick={props.onEdit}>\n          <img className='edit-icon' src={edit} alt='edit row' />\n        </Button>\n      </td>\n    </tr>\n  )\n}\n\nexport default MedalsTableRow\n","import React from 'react'\nimport { Button } from 'reactstrap'\nimport './sort-buttons.css'\nimport arrow from '../../icons/arrow.svg'\n\nconst SortButtons = props => (\n  <div className='sort-buttons d-flex flex-column'>\n    <Button\n      data-sort-direction={`${props.color}-desc`}\n      color={\n        `${props.color}-desc` === props.sortCriteria ? 'success' : 'primary'\n      }\n      onClick={props.onClick}\n    >\n      <img src={arrow} alt='edit row' />\n    </Button>\n    <Button\n      data-sort-direction={`${props.color}-asc`}\n      color={\n        `${props.color}-asc` === props.sortCriteria ? 'success' : 'primary'\n      }\n      className='reversed'\n      onClick={props.onClick}\n    >\n      <img src={arrow} alt='edit row' />\n    </Button>\n  </div>\n)\n\nexport default SortButtons\n","import React from 'react'\n\nconst colors = {\n  gold: '#ffd700',\n  silver: '#c0c0c0',\n  bronze: '#cd7f32',\n  total: '#8F8',\n}\n\nconst Medal = props => (\n  <svg\n    className='medal-icon'\n    xmlns='http://www.w3.org/2000/svg'\n    version='1.1'\n    id='Capa_1'\n    x='0px'\n    y='0px'\n    viewBox='0 0 297.334 297.334'\n    style={{ enableBackground: 'new 0 0 297.334 297.334' }}\n  >\n    <g>\n      <polygon points='172.667,64 206.687,0 90.623,0 124.649,64  ' />\n      <path d='M227.904,8.293c-2.553-4.837-6.726-4.834-9.272,0.006l-55.839,106.095c20.009,2.892,38.11,11.76,52.427,24.735   l36.208-68.682c2.551-4.838,2.549-12.754-0.004-17.591L227.904,8.293z' />\n      <path d='M134.518,114.35L78.7,8.299c-2.547-4.84-6.72-4.843-9.272-0.006L45.909,52.856c-2.552,4.837-2.554,12.753-0.004,17.591   l36.102,68.48C96.362,125.996,114.491,117.181,134.518,114.35z' />\n      <path\n        fill={colors[props.color]}\n        d='M148.502,128.279c-46.685,0-84.529,37.844-84.529,84.528c0,46.682,37.845,84.526,84.529,84.526   c46.682,0,84.526-37.845,84.526-84.526C233.028,166.123,195.184,128.279,148.502,128.279z M148.502,273.125   c-33.262,0-60.32-27.059-60.32-60.317c0-33.261,27.059-60.319,60.32-60.319c33.259,0,60.316,27.059,60.316,60.319   C208.819,246.066,181.761,273.125,148.502,273.125z'\n      />\n      <path\n        fill={colors[props.color]}\n        d='M148.502,167.404c-25.038,0-45.404,20.367-45.404,45.403c0,25.033,20.366,45.4,45.404,45.4   c25.033,0,45.399-20.367,45.399-45.4C193.902,187.771,173.535,167.404,148.502,167.404z'\n      />\n    </g>\n  </svg>\n)\n\nexport default Medal\n","export const removeRow = (medalsData, countryName) =>\n  medalsData.filter(country => country.name !== countryName)\n\nexport const sortTable = (medalsData, key, order) => {\n  return medalsData.sort(\n    (a, b) => (order === 'desc' ? -1 : 1) * (a[key] - b[key]),\n  )\n}\n\nexport const medalTypes = ['gold', 'silver', 'bronze']\nexport const medalTypesTotal = medalTypes.concat('total')\n\nexport const getFormPayload = (event, currentCountry) => {\n  const payload = {}\n  payload.name =\n    currentCountry === 'NewCountry'\n      ? event.currentTarget.querySelector('#name').value\n      : currentCountry\n  payload.total = 0\n  medalTypes.forEach(medal => {\n    payload[medal] = +event.currentTarget.querySelector(`#${medal}`).value\n    payload.total += payload[medal]\n  })\n  return payload\n}\n\nexport const getAvailableCountries = (flags, currentlyUsed) => {\n  const availableCountries = new Set(Object.keys(flags))\n  currentlyUsed.forEach(country => availableCountries.delete(country.name))\n  return Array.from(availableCountries)\n}\n","import React from 'react'\nimport { Table } from 'reactstrap'\nimport MedalsTableRow from '../medals-table-row'\nimport './medals-table.css'\nimport logo from '../../icons/olympic-logo.svg'\nimport SortButtons from '../sort-buttons'\nimport Medal from '../medal'\nimport { medalTypesTotal } from '../../utilities'\n\nconst MedalsTable = props => (\n  <div className='table-container mx-auto my-5'>\n    <img src={logo} className='olympic-logo' alt='logo' />\n    <div className='table-responsive border border-secondary'>\n      <Table>\n        <thead>\n          <tr className='light'>\n            <th className='align-middle border'>Country</th>\n            {medalTypesTotal.map(medal => (\n              <th key={medal} className='align-middle border'>\n                <div className='d-flex align-items-center justify-content-between'>\n                  <Medal color={medal} />\n                  <div className='no-mobile'>\n                    {medal[0].toUpperCase() + medal.slice(1)} Medals\n                  </div>\n                  <SortButtons\n                    color={medal}\n                    onClick={props.changeSorting}\n                    sortCriteria={props.sortCriteria}\n                  />\n                </div>\n              </th>\n            ))}\n            <th className='align-middle border'>Edit</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.data.map((countryData, index) => (\n            <MedalsTableRow\n              key={countryData.name}\n              className={index % 2 ? 'light' : ''}\n              countryData={countryData}\n              onEdit={props.onEdit}\n            />\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  </div>\n)\n\nexport default MedalsTable\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Modal,\n  ModalBody,\n  ModalHeader,\n} from 'reactstrap'\nimport Medal from '../medal'\nimport { flags } from '../../fixtures/data'\nimport { getAvailableCountries, medalTypes } from '../../utilities'\n\nconst MedalsModal = props => {\n  const currentCountry = props.data.find(\n    country => country.name === props.isOpen,\n  )\n\n  return (\n    <Modal isOpen={Boolean(props.isOpen)} className={props.className}>\n      <ModalHeader>\n        {currentCountry\n          ? `Edit Details for ${props.isOpen}`\n          : 'Create new Entry'}\n      </ModalHeader>\n      <ModalBody>\n        <Form onSubmit={props.editRow}>\n          {currentCountry ? null : (\n            <FormGroup>\n              <Label for='name'>Select Country</Label>\n              <Input type='select' min='0' name='name' id='name'>\n                {getAvailableCountries(flags, props.data).map(country => (\n                  <option value={country} key={country}>\n                    {country}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n          )}\n          {medalTypes.map(medal => (\n            <FormGroup key={medal}>\n              <Label for={medal}>\n                <Medal color={medal} />\n                {medal[0].toUpperCase() + medal.slice(1)} Medals:\n              </Label>\n              <Input\n                type='number'\n                min='0'\n                name={medal}\n                id={medal}\n                defaultValue={currentCountry ? currentCountry[medal] : 0}\n              />\n            </FormGroup>\n          ))}\n          <FormGroup className='d-flex justify-content-around'>\n            <Button\n              type='submit'\n              color='success'\n              className='d-inline-block w-25'\n            >\n              Save\n            </Button>\n            {currentCountry ? (\n              <Button\n                color='danger'\n                className='d-inline-block w-25'\n                onClick={props.deleteRow}\n              >\n                Delete Row\n              </Button>\n            ) : null}\n            <Button\n              color='warning'\n              className='d-inline-block w-25'\n              data-country={props.isOpen}\n              onClick={props.toggleModal}\n            >\n              Cancel\n            </Button>\n          </FormGroup>\n        </Form>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default MedalsModal\n","import interfaceSelectors from './interfaceSelectors'\nimport medalsDataSelectors from './medalsDataSelectors'\n\n// export interfaceSelectors\n// export medalsDataSelectors\nexport default {\n  interfaceSelectors,\n  medalsDataSelectors,\n}\n","import { pathOr } from 'ramda'\n\nconst interfaceSelectors = {\n  getOpenModal: pathOr(null, ['interface', 'openModal']),\n  getSortCriteria: pathOr(null, ['interface', 'sortCriteria']),\n}\n\nexport default interfaceSelectors\n","import { pathOr } from 'ramda'\n\nconst interfaceSelectors = {\n  getMedalsData: pathOr(null, ['medalsData', 'medalsData']),\n}\n\nexport default interfaceSelectors\n","import React, { Component } from 'react'\nimport './App.css'\nimport { connect } from 'react-redux'\nimport {\n  changeSorting,\n  deleteRow,\n  editRow,\n  toggleModal,\n} from './actions/actionDispatchers'\nimport AddButton from './components/add-button'\nimport MedalsTable from './components/medals-table'\nimport MedalsModal from './components/medals-modal'\nimport { getFormPayload, sortTable } from './utilities'\nimport { default as selectors } from './selectors'\n\nconst { interfaceSelectors, medalsDataSelectors } = selectors\n\nexport class App extends Component {\n  changeSorting = event =>\n    this.props.changeSorting(event.currentTarget.dataset.sortDirection)\n  deleteRow = event => this.props.deleteRow(this.props.openModal)\n  editRow = event => {\n    event.preventDefault()\n    const payload = getFormPayload(event, this.props.openModal)\n    this.props.editRow(payload)\n  }\n  toggleModalEdit = event =>\n    this.props.toggleModal(event.currentTarget.dataset.country)\n  toggleModalNew = event => this.props.toggleModal('NewCountry')\n\n  render() {\n    return (\n      <div className='App'>\n        <AddButton onClick={this.toggleModalNew} />\n        <MedalsModal\n          deleteRow={this.deleteRow}\n          toggleModal={this.toggleModalEdit}\n          editRow={this.editRow}\n          isOpen={this.props.openModal}\n          data={this.props.data}\n        />\n        <MedalsTable\n          changeSorting={this.changeSorting}\n          data={sortTable(\n            this.props.data,\n            ...this.props.sortCriteria.split('-'),\n          )}\n          onEdit={this.toggleModalEdit}\n          sortCriteria={this.props.sortCriteria}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: medalsDataSelectors.getMedalsData(state),\n  openModal: interfaceSelectors.getOpenModal(state),\n  sortCriteria: interfaceSelectors.getSortCriteria(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  changeSorting: changeSorting(dispatch),\n  deleteRow: deleteRow(dispatch),\n  editRow: editRow(dispatch),\n  toggleModal: toggleModal(dispatch),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App)\n","import { TOGGLE_MODAL, CHANGE_SORTING } from '../actions/constants'\nexport const initialState = {\n  openModal: null,\n  sortCriteria: 'gold-desc',\n}\n\nconst interfaceReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_MODAL:\n      return {\n        ...state,\n        openModal: state.openModal === action.payload ? null : action.payload,\n      }\n    case CHANGE_SORTING:\n      return {\n        ...state,\n        sortCriteria: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default interfaceReducer\n","import { EDIT_ROW, DELETE_ROW } from '../actions/constants'\nimport { removeRow } from '../utilities'\nimport { olympicMedalsByCountry } from '../fixtures/data'\n\nexport const initialState = {\n  medalsData: olympicMedalsByCountry,\n}\n\nconst medalsDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_ROW:\n      return {\n        ...state,\n        medalsData: [\n          action.payload,\n          ...removeRow(state.medalsData, action.payload.name),\n        ],\n      }\n    case DELETE_ROW:\n      return {\n        ...state,\n        medalsData: removeRow(state.medalsData, action.payload),\n      }\n    default:\n      return state\n  }\n}\n\nexport default medalsDataReducer\n","import { combineReducers } from 'redux'\n// more reducers would go here\nimport interfaceReducer from './interfaceReducer'\nimport medalsDataReducer from './medalsDataReducer'\n\nexport const initialState = {}\n\nconst baseReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n\nconst rootReducer = () =>\n  combineReducers({\n    baseReducer,\n    interface: interfaceReducer,\n    medalsData: medalsDataReducer,\n  })\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer, { initialState } from './reducers'\nimport thunkMiddleware from 'redux-thunk'\n\nconst loggerMiddleware = createLogger()\n\nconst store = createStore(\n  rootReducer(),\n  initialState,\n  applyMiddleware(thunkMiddleware, loggerMiddleware),\n)\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { Provider } from 'react-redux'\nimport store from './reducers'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}